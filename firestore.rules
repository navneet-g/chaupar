rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Games collection - authenticated users only
    match /games/{gameId} {
      allow read, write: if request.auth != null 
        && (
          // User is a player in the game
          request.auth.uid in resource.data.players
          // Or user is creating a new game
          || !resource.exists
          // Or user is updating their own player data
          || (resource.data.players[request.auth.uid] != null)
        );
      
      // Additional validation for game creation
      allow create: if request.auth != null
        && request.resource.data.players[request.auth.uid] != null
        && request.resource.data.createdAt is timestamp;
      
      // Additional validation for game updates
      allow update: if request.auth != null
        && resource.data.players[request.auth.uid] != null
        && request.resource.data.updatedAt is timestamp;
    }
    
    // User profiles - users can only access their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null 
        && request.auth.uid == userId;
      
      // Allow creation of user profile
      allow create: if request.auth != null
        && request.auth.uid == userId
        && request.resource.data.createdAt is timestamp;
    }
    
    // Game moves history - only game participants can access
    match /games/{gameId}/moves/{moveId} {
      allow read, write: if request.auth != null
        && exists(/databases/$(database)/documents/games/$(gameId))
        && get(/databases/$(database)/documents/games/$(gameId)).data.players[request.auth.uid] != null;
    }
    
    // Chat messages - only game participants can access
    match /games/{gameId}/chat/{messageId} {
      allow read, write: if request.auth != null
        && exists(/databases/$(database)/documents/games/$(gameId))
        && get(/databases/$(database)/documents/games/$(gameId)).data.players[request.auth.uid] != null;
    }
    
    // Leaderboards - public read, authenticated write
    match /leaderboards/{timeframe}/entries/{entryId} {
      allow read: if true; // Public read access
      allow write: if request.auth != null
        && request.auth.uid == entryId; // Users can only update their own entry
    }
    
    // Achievements - users can only access their own
    match /users/{userId}/achievements/{achievementId} {
      allow read, write: if request.auth != null
        && request.auth.uid == userId;
    }
    
    // Game statistics - users can only access their own
    match /users/{userId}/statistics/{statId} {
      allow read, write: if request.auth != null
        && request.auth.uid == userId;
    }
  }
}
